<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dandan.danvesting.post.comment.like.dao.CommentLikeDAO">

	<insert id="insertCommentLike" parameterType="map">
		INSERT INTO `like`
 		(
 			`postOrComment` 
 			, `likeOrDislike`
			, `userId`
			, `nickName`
			, `postId`
			, `commentId`
			, `createdAt`
			, `updatedAt`
 		) VALUES (
 			1
 			, 1
 			, #{userId}
 			, #{nickName}
 			, #{postId}
 			, #{commentId}
 			, now()
 			, now()
 		);
	</insert>

	<select id="selectCommentLikeCount" parameterType="int" resultType="int">
 		SELECT
 			count(*)
 		FROM
 			`like`
 		WHERE
 			`postId` = #{postId}
 		AND 
 			`commentId` = #{commentId}
 		AND 
 			`likeOrDislike` = 1;
 	</select>
	
	<delete id="deleteCommentLikeByUserId" parameterType="map">
 		DELETE FROM 
 			`like`
 		WHERE
 			`postId` = #{postId}
 		AND 
 			`commentId` = #{commentId}
 		AND 
 			`likeOrDislike` = 1
 		AND
 			`userId` = #{userId};
 	</delete>
 	
 	<select id="selectIsCommentLikeByUserId" parameterType="map" resultType="int">
 		SELECT
 			count(*)
 		FROM
 			`like`
 		WHERE
 			`postId` = #{postId}
 		AND 
 			`commentId` = #{commentId}
 		AND 
 			`likeOrDislike` = 1
 		AND
 			`userId` = #{userId};
 	</select>

	<insert id="insertCommentDislike" parameterType="map">
		INSERT INTO `like`
 		(
 			`postOrComment` 
 			, `likeOrDislike`
			, `userId`
			, `nickName`
			, `postId`
			, `commentId`
			, `createdAt`
			, `updatedAt`
 		) VALUES (
 			1
 			, 0
 			, #{userId}
 			, #{nickName}
 			, #{postId}
 			, #{commentId}
 			, now()
 			, now()
 		);
	</insert>

	<select id="selectCommentDislikeCount" parameterType="int" resultType="int">
 		SELECT
 			count(*)
 		FROM
 			`like`
 		WHERE
 			`postId` = #{postId}
 		AND 
 			`commentId` = #{commentId}
 		AND 
 			`likeOrDislike` = 0;
 	</select>
	
	<delete id="deleteCommentDislikeByUserId" parameterType="map">
 		DELETE FROM 
 			`like`
 		WHERE
 			`postId` = #{postId}
 		AND 
 			`commentId` = #{commentId}
 		AND 
 			`likeOrDislike` = 0
 		AND
 			`userId` = #{userId};
 	</delete>
 	
 	<select id="selectIsCommentDislikeByUserId" parameterType="map" resultType="int">
 		SELECT
 			count(*)
 		FROM
 			`like`
 		WHERE
 			`postId` = #{postId}
 		AND 
 			`commentId` = #{commentId}
 		AND 
 			`likeOrDislike` = 0
 		AND
 			`userId` = #{userId};
 	</select>

</mapper>
